---
stages:
  - test
  - prep
  - tag
  - build

yamllint:
  stage: test
  image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/yamllint:latest
  script:
    - yamllint .
  tags:
    - docker

hadolint:
  stage: test
  image:
    name: ghcr.io/hadolint/hadolint:latest-debian
  script:
    - mkdir -p reports
    - hadolint -f gitlab_codeclimate Dockerfile > reports/hadolint-$(md5sum Dockerfile | cut -d" " -f1).json
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    expire_in: 1 day
    when: always
    reports:
      codequality:
        - "reports/*"
    paths:
      - "reports/*"
  tags:
    - docker

tag-prep:
  stage: prep
  image: 'registry.gitlab.com/gitlab-org/gitlab-runner/gitlab-runner-helper:ubuntu-x86_64-latest'
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - './.gitlab-ci/next-tag | tee tag.env'
  artifacts:
    reports:
      dotenv: tag.env
  tags:
    - docker

tag:
  stage: tag
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: tag-prep
      artifacts: true
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "Running release_job for $TAG"
  release:
    tag_name: '$TAG'
    description: 'Release created using the release-cli.'
    ref: '$CI_COMMIT_SHA'
  tags:
    - docker

# From https://docs.gitlab.com/ee/ci/docker/using_kaniko.html#building-a-docker-image-with-kaniko
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - >-
      echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(echo -n "${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}"
      > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
      --destination "${CI_REGISTRY_IMAGE}:latest"
  rules:
    - if: $CI_COMMIT_TAG
  tags:
    - docker
